## Generated by config-gen DO NOT EDIT
input:
  label: "ingest_server_input"
  http_server:
      address: 0.0.0.0:9443
      path: /integration/{connection_id}/store
      allowed_verbs:
        - POST
      timeout: 5s
      rate_limit: "connection_rate_limit"
      tls:
        enabled: true
        client_root_cas_file: /etc/ssl/certs/dis/root_ca.crt
        server_certs:
          - cert_file: /etc/ssl/certs/dis/tls.crt
            key_file: /etc/ssl/certs/dis/tls.key
        require_mutual_tls: true
      sync_response:
        status: "200"
        headers:
          Content-Type: application/octet-stream
pipeline:
  processors:
    - label: "cloudevent_switch"
      switch:
          - check: '@http_server_request_path == "/integration/ruptela_integration_id/store"'
            processors:
              - label: convert_cloudevent_ruptela
                dimo_cloudevent_convert:
                  module_name: ruptela
                  module_config: ewogICJjaGFpbl9pZCI6ICIxMzciLAogICJhZnRlcm1hcmtldF9jb250cmFjdF9hZGRyIjogIjB4OWM5NEMzOTVjQmNCRGU2NjIyMzVFMEE5ZDNiQjg3QWQ3MDg1NjFCQSIsCiAgInZlaGljbGVfY29udHJhY3RfYWRkciI6ICIweGJBNTczOGExOGQ4M0Q0MTg0N2RmRmJEQzYxMDFkMzdDNjljOUIwY0YiCn0K
          - check: '@http_server_request_path == "/integration/macaron_integration_id/store"'
            processors:
              - label: convert_cloudevent_macaron
                dimo_cloudevent_convert:
                  module_name: macaron
                  module_config: ewogICJkZXZpY2VfYXBpX3VybCI6ICJodHRwOi8vZGV2aWNlcy1hcGktZGV2OjgwODYiCn0K
    - catch:
        - label: "convert_cloudevent_errors"
          log:
            level: WARN
            message: "failed to convert to cloudevent: ${!error()}"
            fields_mapping: |
               source = "@http_server_request_path"
        - mapping: root = deleted()
output:
  label: "all_output_broker"
  broker:
    pattern: fan_out
    outputs:
      - label: "clickhouse_signal_drop_on_error"
        drop_on:
          error: true
          output:
            label: "clickhouse_signal_insert_file"
            switch:
              cases:
                  - check: '@http_server_request_path == "/integration/ruptela_integration_id/store"'
                    output:
                      label: "clickhouse_signal_insert_ruptela"
                      sql_insert:
                        driver: clickhouse
                        dsn: clickhouse://${CLICKHOUSE_HOST}:${CLICKHOUSE_PORT}/${CLICKHOUSE_DATABASE}?username=${CLICKHOUSE_USER}&password=${CLICKHOUSE_PASSWORD}&secure=true&dial_timeout=200ms&max_execution_time=300
                        table: signal
                        columns: []
                        args_mapping: root = this
                        batching:
                          count: 10000
                          byte_size: 0
                          period: "200ms"
                          check: ""
                  - check: '@http_server_request_path == "/integration/macaron_integration_id/store"'
                    output:
                      label: "clickhouse_signal_insert_macaron"
                      sql_insert:
                        driver: clickhouse
                        dsn: clickhouse://${CLICKHOUSE_HOST}:${CLICKHOUSE_PORT}/${CLICKHOUSE_DATABASE}?username=${CLICKHOUSE_USER}&password=${CLICKHOUSE_PASSWORD}&secure=true&dial_timeout=200ms&max_execution_time=300
                        table: signal
                        columns: []
                        args_mapping: root = this
                        batching:
                          count: 10000
                          byte_size: 0
                          period: "200ms"
                          check: ""
            processors:
              - label: convert_signals_switch
                switch:
                  - check: '@http_server_request_path == "/integration/ruptela_integration_id/store"'
                    processors:
                      - label: convert_signals_ruptela
                        dimo_signal_convert:
                          module_name: ruptela
                          module_config: ewogICJjaGFpbl9pZCI6ICIxMzciLAogICJhZnRlcm1hcmtldF9jb250cmFjdF9hZGRyIjogIjB4OWM5NEMzOTVjQmNCRGU2NjIyMzVFMEE5ZDNiQjg3QWQ3MDg1NjFCQSIsCiAgInZlaGljbGVfY29udHJhY3RfYWRkciI6ICIweGJBNTczOGExOGQ4M0Q0MTg0N2RmRmJEQzYxMDFkMzdDNjljOUIwY0YiCn0K
                  - check: '@http_server_request_path == "/integration/macaron_integration_id/store"'
                    processors:
                      - label: convert_signals_macaron
                        dimo_signal_convert:
                          module_name: macaron
                          module_config: ewogICJkZXZpY2VfYXBpX3VybCI6ICJodHRwOi8vZGV2aWNlcy1hcGktZGV2OjgwODYiCn0K
              - catch:
                  - label: "log_convert_errors"
                    log:
                      level: WARN
                      message: "status processing failed: ${!error()}"
                      fields_mapping: |
                        vehicleTokenId = this.tokenId.or(-1)
                        source = this.source.or("unknown")
                  - mapping: root = deleted()      
      - label: "object_output_drop_on_error"
        drop_on:
          error: true
          output:
            label: "s3_object_insert"
            switch:
              cases:
                  - check: '@http_server_request_path == "/integration/ruptela_integration_id/store"'
                    output:
                      file:
                        path: '/tmp/s3_ruptela${! counter(min: 1, max: 100) }.json'
                        codec: all-bytes
                  - check: '@http_server_request_path == "/integration/macaron_integration_id/store"'
                    output:
                      file:
                        path: '/tmp/s3_macaron${! counter(min: 1, max: 100) }.json'
                        codec: all-bytes
            processors:
              - label: "s3_file_mapping"
                mapping: |
                  root.msg = this
                  root.metadata = metadata()