## Generated by config-gen DO NOT EDIT
input:
  label: "ingest_server_{{ toLower .IntegrationName }}"
  http_server:
    address: 0.0.0.0:8080
    path: /integration/{{ .IntegrationID }}/store
    allowed_verbs:
      - POST
    timeout: 5s
    rate_limit: "integration_rate_limit"
    sync_response:
      status: "200"
      headers:
        Content-Type: application/octet-stream
pipeline:
  processors:
    - label: convert_cloudevent_{{ toLower .IntegrationName }}
      dimo_cloudevent_convert:
        module_name: {{ .ModuleName }}
        module_config: {{ base64 .ModuleConfig }}
    - catch:
        - label: "convert_cloudevent_errors"
          log:
            level: WARN
            message: "failed to convert to cloudevent: ${!error()}"
            fields_mapping: |
               source = "{{ .IntegrationID }}"
        - mapping: root = deleted()
output:
  broker:
    pattern: fan_out
    outputs:
      - label: "clickhouse_signal_insert_{{ toLower .IntegrationName }}"
        drop_on:
          error: true
          output:
            label: "clickhouse_signal_insert_{{ toLower .IntegrationName }}_file"
            file:
              path: '/tmp/clickhouse_${! counter(min: 1, max: 100) }.json'
              codec: all-bytes
            processors:
              - label: convert_signals
                dimo_signal_convert:
                  module_name: {{ .ModuleName }}
                  module_config: {{ base64 .ModuleConfig }}
              - catch:
                  - label: "log_convert_errors"
                    log:
                      level: WARN
                      message: "status processing failed: ${!error()}"
                      fields_mapping: |
                        vehicleTokenId = this.tokenId.or(-1)
                        source = this.source.or("unknown")
                  - mapping: root = deleted()      
              - mapping: | 
                  root.msg = this
                  root.metadata = metadata()
      - label: "object_output_{{ toLower .IntegrationName }}"
        drop_on:
          error: true
          output:
            label: "s3_object_insert_{{ toLower .IntegrationName }}"
            file:
              path: '/tmp/s3_${! counter(min: 1, max: 100) }.json'
              codec: all-bytes
            processors:
              - mapping: | 
                  root.msg = this
                  root.metadata = metadata()